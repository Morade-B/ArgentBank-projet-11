swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Accounts and Transactions Module
      summary: Retrieve all transactions
      description: API to retrieve all transactions
      security:
        - Bearer: []
      responses:
        '200':
          description: All transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized user
        '500':
          description: Internal Server Error
  /transactions-monthly:
    get:
      tags:
        - Accounts and Transactions Module
      summary: Retrieve all transactions for the current month
      description: API to retrieve all transactions for the current month
      security:
        - Bearer: []
      responses:
        '200':
          description: All monthly transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized user
        '500':
          description: Internal Server Error
  /transactions/{id}:
    get:
      tags:
        - Accounts and Transactions Module
      summary: Retrieve a transaction by ID
      description: API to retrieve a specific transaction by its ID
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized user
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - Accounts and Transactions Module
      summary: Update transaction's category and note
      description: API to update the category and note of a specific transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction's category and note
          required: true
          schema:
            type: object
            properties:
              category:
                $ref: '#/definitions/TransactionCategory'
              note:
                $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized user
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Accounts and Transactions Module
      summary: Delete a transaction
      description: API to delete a specific transaction by its ID
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Transaction deleted successfully
        '401':
          description: Unauthorized user
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      id:
        type: string
        description: ID de la transaction
      amount:
        type: number
        format: float
        description: Montant de la transaction
      date:
        type: string
        format: date
        description: Date de la transaction
      category:
        type: string
        description: Catégorie de la transaction
      note:
        type: string
        description: Note associée à la transaction
      accountId:
        type: string
        description: ID du compte associé
  TransactionCategory:
    type: string
    description: Catégorie de la transaction à mettre à jour
  TransactionNote:
    type: string
    description: Note de la transaction à mettre à jour